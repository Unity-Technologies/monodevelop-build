diff --git a/main/src/addins/MonoDevelop.Debugger/MonoDevelop.Debugger/BreakpointPropertiesDialog.cs b/main/src/addins/MonoDevelop.Debugger/MonoDevelop.Debugger/BreakpointPropertiesDialog.cs
index 8e11088..83dbccb 100644
--- a/main/src/addins/MonoDevelop.Debugger/MonoDevelop.Debugger/BreakpointPropertiesDialog.cs
+++ b/main/src/addins/MonoDevelop.Debugger/MonoDevelop.Debugger/BreakpointPropertiesDialog.cs
@@ -188,6 +188,12 @@ namespace MonoDevelop.Debugger
 			Sensitive = false,
 			TextAlignment = Alignment.End
 		};
+
+		readonly Label exceptionTypeTip = new Label (GettextCatalog.GetString ("Exception list is generated from currently selected project.")) {
+			Sensitive = false,
+			TextAlignment = Alignment.End
+		};
+
 		readonly Label conditionalExpressionTip = new Label (GettextCatalog.GetString ("A C# boolean expression. Scope is local to the breakpoint.")) {
 			Sensitive = false,
 			TextAlignment = Alignment.End
@@ -764,6 +770,7 @@ namespace MonoDevelop.Debugger
 				hboxException.PackEnd (warningException);
 
 				vboxException.PackStart (hboxException);
+				vboxException.PackStart (exceptionTypeTip);
 				vboxException.PackStart (checkIncludeSubclass);
 				whenToTakeActionRadioGroup.PackStart (vboxException);
 			}
diff --git a/main/src/addins/MonoDevelop.SourceEditor2/MonoDevelop.SourceEditor/SourceEditorView.cs b/main/src/addins/MonoDevelop.SourceEditor2/MonoDevelop.SourceEditor/SourceEditorView.cs
index 5cfd2f7..1890724b 100644
--- a/main/src/addins/MonoDevelop.SourceEditor2/MonoDevelop.SourceEditor/SourceEditorView.cs
+++ b/main/src/addins/MonoDevelop.SourceEditor2/MonoDevelop.SourceEditor/SourceEditorView.cs
@@ -723,6 +723,7 @@ namespace MonoDevelop.SourceEditor
 						}
 					}
 					Mono.TextEditor.Utils.TextFileUtility.WriteText (fileName, writeText, writeEncoding, writeBom);
+					this.encoding = writeEncoding;
 				} catch (InvalidEncodingException) {
 					var result = MessageService.AskQuestion (GettextCatalog.GetString ("Can't save file with current codepage."), 
 						GettextCatalog.GetString ("Some unicode characters in this file could not be saved with the current encoding.\nDo you want to resave this file as Unicode ?\nYou can choose another encoding in the 'save as' dialog."),
diff --git a/main/src/core/MonoDevelop.Ide/ExtensionModel/Commands.addin.xml b/main/src/core/MonoDevelop.Ide/ExtensionModel/Commands.addin.xml
index 1ae62d6..3ca049d 100644
--- a/main/src/core/MonoDevelop.Ide/ExtensionModel/Commands.addin.xml
+++ b/main/src/core/MonoDevelop.Ide/ExtensionModel/Commands.addin.xml
@@ -739,13 +739,14 @@
 	<!-- HelpCommands -->
 	<Category _name = "Help" id = "Help">
 
+	<!---
 	<Command id = "MonoDevelop.Ide.Commands.HelpCommands.Help"
 			_label = "API Documentation"
 			icon = "gtk-help"
 			_description = "Show help"
 			defaultHandler = "MonoDevelop.Ide.Commands.HelpHandler"
 			shortcut = "F1"
-			macShortcut = "Meta|Alt|?" />
+			macShortcut = "Meta|Alt|?" /> -->
 	<Command id = "MonoDevelop.Ide.Commands.HelpCommands.TipOfTheDay"
 			defaultHandler = "MonoDevelop.Ide.Commands.TipOfTheDayHandler"
 			_label = "_Tip of the Day"
diff --git a/main/src/core/MonoDevelop.Ide/ExtensionModel/MainMenu.addin.xml b/main/src/core/MonoDevelop.Ide/ExtensionModel/MainMenu.addin.xml
index e3a7cc9..e78e980 100644
--- a/main/src/core/MonoDevelop.Ide/ExtensionModel/MainMenu.addin.xml
+++ b/main/src/core/MonoDevelop.Ide/ExtensionModel/MainMenu.addin.xml
@@ -244,7 +244,7 @@
 	</ItemSet> 
 
 	<ItemSet id = "Help" _label = "_Help">
-		<CommandItem id = "MonoDevelop.Ide.Commands.HelpCommands.Help" />
+<!--		<CommandItem id = "MonoDevelop.Ide.Commands.HelpCommands.Help" /> -->
 		<CommandItem id = "MonoDevelop.Ide.Commands.HelpCommands.TipOfTheDay" />
 		<CommandItem id = "MonoDevelop.Ide.Commands.HelpCommands.SendFeedback" />
 		<Condition id = "Platform" value = "!mac">
@@ -263,7 +263,7 @@
 		</ItemSet>
 		<SeparatorItem id = "Separator3" />
 		<CommandItem id = "MonoDevelop.Ide.Commands.HelpCommands.OpenLogDirectory" />
-		<LinkItem id = "ReportBug" _label = "Report a Bug" link = "http://xamar.in/r/file_studio_bug" />
+<!---	<LinkItem id = "ReportBug" _label = "Report a Bug" link = "http://xamar.in/r/file_studio_bug" /> -->
 		<Condition id = "Platform" value = "!mac">
 			<CommandItem id = "MonoDevelop.Ide.Commands.HelpCommands.About" />
 		</Condition>
diff --git a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs
index 55e2afe..ae9a49e 100644
--- a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs
+++ b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui.Pads/ErrorListPad.cs
@@ -330,10 +330,10 @@ namespace MonoDevelop.Ide.Gui.Pads
 			
 			var group = new ActionGroup ("Popup");
 
-			var help = new Gtk.Action ("help", GettextCatalog.GetString ("Show Error Reference"),
-				GettextCatalog.GetString ("Show Error Reference"), Gtk.Stock.Help);
-			help.Activated += OnShowReference;
-			group.Add (help, "F1");
+//			var help = new Gtk.Action ("help", GettextCatalog.GetString ("Show Error Reference"),
+//				GettextCatalog.GetString ("Show Error Reference"), Gtk.Stock.Help);
+//			help.Activated += OnShowReference;
+//			group.Add (help, "F1");
 
 			var copy = new Gtk.Action ("copy", GettextCatalog.GetString ("_Copy"),
 				GettextCatalog.GetString ("Copy task"), Gtk.Stock.Copy);
@@ -402,7 +402,7 @@ namespace MonoDevelop.Ide.Gui.Pads
 			uiManager.InsertActionGroup (group, 0);
 			
 			string uiStr = "<ui><popup name='popup'>"
-				+ "<menuitem action='help'/>"
+//				+ "<menuitem action='help'/>"
 				+ "<menuitem action='copy'/>"
 				+ "<menuitem action='jump'/>"
 				+ "<separator/>"
@@ -431,7 +431,8 @@ namespace MonoDevelop.Ide.Gui.Pads
 				columnProject.Active = view.Columns[VisibleColumns.Project].Visible;
 				columnPath.Active = view.Columns[VisibleColumns.Path].Visible;
 				columnCategory.Active = view.Columns[VisibleColumns.Category].Visible;
-				help.Sensitive = copy.Sensitive = jump.Sensitive =
+				// help.Sensitive = copy.Sensitive = jump.Sensitive =
+				copy.Sensitive = jump.Sensitive =
 					view.Selection != null &&
 					view.Selection.CountSelectedRows () > 0 &&
 					(columnType.Active ||
@@ -441,7 +442,7 @@ namespace MonoDevelop.Ide.Gui.Pads
 						columnFile.Active ||
 						columnPath.Active);
 				string dummyString;
-				help.Sensitive &= GetSelectedErrorReference (out dummyString);
+//				help.Sensitive &= GetSelectedErrorReference (out dummyString);
 			};
 			
 			return menu;
diff --git a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui/StartupInfo.cs b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui/StartupInfo.cs
index abaa1b0..ad3887f 100644
--- a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui/StartupInfo.cs
+++ b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Gui/StartupInfo.cs
@@ -62,7 +62,7 @@ namespace MonoDevelop.Ide.Gui
 		/// Matches a filename string with optional line and column 
 		/// (/foo/bar/blah.cs;22;31)
 		/// </summary>
-		public static readonly Regex FileExpression = new Regex (@"^(?<filename>[^;]+)(;(?<line>\d+))?(;(?<column>\d+))?$", RegexOptions.Compiled);
+		public static readonly Regex FileExpression = new Regex (@"^(?<filename>[^;]+)(;(?<line>-?\d+))?(;(?<column>-?\d+))?$", RegexOptions.Compiled);
 		
 		public StartupInfo (IEnumerable<string> args)
 		{
diff --git a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/Ide.cs b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/Ide.cs
index 3a0224a..34319fc 100644
--- a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/Ide.cs
+++ b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/Ide.cs
@@ -324,14 +324,16 @@ namespace MonoDevelop.Ide
 			
 			//open the firsts sln/workspace file, and remove the others from the list
 		 	//FIXME: can we handle multiple slns?
-			bool foundSln = false;
+			bool foundSln = false;
+			IAsyncOperation openSolutionOperation = null;
 			foreach (var file in files) {
 				if (Services.ProjectService.IsWorkspaceItemFile (file.FileName) ||
 				    Services.ProjectService.IsSolutionItemFile (file.FileName)) {
 					if (!foundSln) {
 						try {
-							Workspace.OpenWorkspaceItem (file.FileName);
-							foundSln = true;
+							var op = Workspace.OpenWorkspaceItem (file.FileName);
+							foundSln = true;
+							openSolutionOperation = op;
 						} catch (Exception ex) {
 							MessageService.ShowError (GettextCatalog.GetString ("Could not load solution: {0}", file.FileName), ex);
 						}
@@ -339,8 +341,15 @@ namespace MonoDevelop.Ide
 				} else {
 					filteredFiles.Add (file);
 				}
-			}
-			
+			}
+			
+			// Wait for solution and it's open files to load, so we are sure
+			// that the files we open afterwards are actually opened in tabs
+			// after the solution's saved open files and that the last file
+			// in the filteredFiles gets focus, if specified as an option.
+			if (filteredFiles.Count > 0 && openSolutionOperation != null)
+				openSolutionOperation.WaitForCompleted();
+
 			foreach (var file in filteredFiles) {
 				try {
 					Workbench.OpenDocument (file.FileName, file.Line, file.Column, file.Options);
diff --git a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/IdeStartup.cs b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/IdeStartup.cs
index e4bbdeb..15f6e4a 100644
--- a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/IdeStartup.cs
+++ b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/IdeStartup.cs
@@ -60,7 +60,7 @@ namespace MonoDevelop.Ide
 		ArrayList errorsList = new ArrayList ();
 		bool initialized;
 		internal static string DefaultTheme;
-		static readonly int ipcBasePort = 40000;
+		static readonly int ipcBasePort = 41000;
 		
 		int IApplication.Run (string[] args)
 		{
@@ -143,12 +143,12 @@ namespace MonoDevelop.Ide
 			if (!options.NewWindow && startupInfo.HasFiles) {
 				Counters.Initialization.Trace ("Pre-Initializing Runtime to load files in existing window");
 				Runtime.Initialize (true);
-				foreach (var file in startupInfo.RequestedFileList) {
-					if (MonoDevelop.Projects.Services.ProjectService.IsWorkspaceItemFile (file.FileName)) {
-						options.NewWindow = true;
-						break;
-					}
-				}
+//				foreach (var file in startupInfo.RequestedFileList) {
+//					if (MonoDevelop.Projects.Services.ProjectService.IsWorkspaceItemFile (file.FileName)) {
+//						options.NewWindow = true;
+//						break;
+//					}
+//				}
 			}
 			
 			Counters.Initialization.Trace ("Initializing Runtime");
@@ -199,6 +199,15 @@ namespace MonoDevelop.Ide
 					// Reset the socket
 					if (null != socket_filename && File.Exists (socket_filename))
 						File.Delete (socket_filename);
+
+					if (options.IpcTcp) {
+						try {
+							listen_socket.Close();
+							listen_socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.IP);
+						} catch (Exception exc) {
+							LoggingService.LogError("Error resetting TCP socket", exc);
+						}
+					}
 				}
 			}
 			
@@ -657,6 +666,26 @@ namespace MonoDevelop.Ide
 						"may not be properly installed in the GAC.",
 						BrandingService.ApplicationName
 					), ex);
+
+				if (Platform.IsWindows)
+				{
+					string url = "http://monodevelop.com/Download";
+					string caption = "Fatal Error";
+					string message =
+						"{0} failed to start. Some of the assemblies required to run {0} (for example GTK#) " +
+						"may not be properly installed in the GAC.\n\r\n\r" +
+						"Please click OK to open the download page, where " +
+						"you can download the necessary dependencies for {0} to run.";
+
+					if (DisplayWindowsOkCancelMessage(
+						string.Format(message, BrandingService.ApplicationName, url), caption)
+					)
+					{
+						Process.Start(url);
+					}
+				}
+
+
 			} finally {
 				Runtime.Shutdown ();
 			}
diff --git a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/ProjectOperations.cs b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/ProjectOperations.cs
index dff2ba3..5109d83 100644
--- a/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/ProjectOperations.cs
+++ b/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide/ProjectOperations.cs
@@ -109,7 +109,7 @@ namespace MonoDevelop.Ide
 			get {
 				return currentWorkspaceItem;
 			}
-			internal set {
+			set {
 				if (value != currentWorkspaceItem) {
 					WorkspaceItem oldValue = currentWorkspaceItem;
 					currentWorkspaceItem = value;
@@ -125,7 +125,7 @@ namespace MonoDevelop.Ide
 					return CurrentSelectedSolution.RootFolder;
 				return currentSolutionItem;
 			}
-			internal set {
+			set {
 				if (value != currentSolutionItem) {
 					SolutionItem oldValue = currentSolutionItem;
 					currentSolutionItem = value;
@@ -139,7 +139,7 @@ namespace MonoDevelop.Ide
 			get {
 				return currentItem;
 			}
-			internal set {
+			set {
 				currentItem = value;
 			}
 		}
